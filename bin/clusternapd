#!/usr/bin/env python

import os, sys, time
import action_on_off
import cntools
import logset
from daemon import Daemon

log          = logset.get("clusternapd_event", "event.log")
errorlog     = logset.get("clusternapd_error", "error.log")
CN_RATE      = os.getenv('CN_RATE', 5)
CHECK_TORQUE = os.getenv('CHECK_TORQUE', False)
#PBS_RELEASE  = os.getenv('PBS_RELEASE', False)


# Check PBS_RELEASE
#if isinstance(PBS_RELEASE, basestring):
#    if PBS_RELEASE in ['TRUE', 'True', 'true', '1']:
#        PBS_RELEASE = True
#    elif PBS_RELEASE in ['FALSE', 'False', 'false', '0']:
#        PBS_RELEASE = False
#    else:
#        msg = "Environment variable PBS_RELEASE has given wrong value: " + PBS_RELEASE
#        msg += "\nWill be set to default value 'False'"
#        log.warn(USER + ": " + msg)
#        PBS_RELEASE = False

if isinstance(CHECK_TORQUE, basestring):
    if CHECK_TORQUE in ['TRUE', 'True', 'true', '1']:
        CHECK_TORQUE = True
    elif CHECK_TORQUE in ['FALSE', 'False', 'false', '0']:
        CHECK_TORQUE = False
    else:
        msg = "Environment variable CHECK_TORQUE has given wrong value: " + CHECK_TORQUE
        msg += "\nWill be set to default value 'False'"
        log.warn(USER + ": " + msg)
        CHECK_TORQUE = False

if isinstance(CN_RATE, basestring):
    if CN_RATE.isdigit() and int(CN_RATE) > 0:
        CN_WAIT = int(CN_RATE)
    else:
        msg =  "Environment variable CN_RATE has given wrong value: " + CN_RATE
        msg += "\nWill be set to default value 5 seconds"
        log.warn(USER + ": " + msg)
        CN_RATE = 5

class clusternapd(Daemon):
	def run(self):
		log.info("DAEMON clusternapd started")
		while True:
			try:
				if CHECK_TORQUE:
					cntools.action_pbsnodes()

				action_on_off.action_on_off().main()
				time.sleep(CN_RATE)
			except Exception as ex:
				msg1 = "An error occured while running clusternapd. Error is: "
				errorlog.error("clusternapd: " + msg1)
				errorlog.error(str(ex))
				

if __name__ == "__main__":
	daemon = clusternapd('/tmp/clusternapd.pid')
	if len(sys.argv) == 2:
		if 'start' == sys.argv[1]:
			daemon.start()
		elif 'stop' == sys.argv[1]:
			daemon.stop()
		elif 'restart' == sys.argv[1]:
			daemon.restart()
		else:
			print "Unknown command"
			sys.exit(2)
		sys.exit(0)
	else:
		print "usage: %s start|stop|restart" % sys.argv[0]
		sys.exit(2)
